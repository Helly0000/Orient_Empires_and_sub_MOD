#请愿
oe_petition_liege_decision = {
	ai_check_interval = 0
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_knight_kneeling.dds"
	}
	decision_group_type = major
	sort_order = 120

	cost = {
		prestige = {
			value = standard_activity_cost
			multiply = 3
		}
		gold = {
			value = 0
			if = {
				limit = {
					exists = scope:pay_homage_gold
					scope:pay_homage_gold = yes
				}
				add = medium_gold_value
			}
		}
	}

	cooldown = {
		days = standard_petition_liege_cooldown_time
	}

	is_shown = {
		is_ai = no
		is_landed = yes
		is_independent_ruler = no
		is_available_adult = yes
	}

	is_valid_showing_failures_only = {
		NOT = { is_at_war_with = top_liege }
		top_liege = { has_royal_court = yes }
		top_liege = { is_available_adult = yes }
		custom_tooltip = {
			text = petition_liege_council_no_petition_valid_tt
			OR = {
				AND = {
					scope:ask_for_bureaucrat_position = yes
					is_oe_landed_bureaucrat_trigger = yes
				}
				AND = {
					scope:convert_to_milita = yes
					is_milita_government_trigger = no
				}
				AND = {
					scope:transfer_to_legion = yes
					vassal_contract_has_flag = imperial_contract_1
					NOT = { vassal_contract_has_flag = imperial_legion_2 }
				}
				AND = {
					scope:heir_succession = yes
					vassal_contract_has_flag = imperial_contract_1
					is_ai = no
					has_realm_law = official_succession_law
				}
			}
		}
		trigger_if = { # 讨官
			limit = { scope:ask_for_bureaucrat_position = yes }
				custom_tooltip = { #
					text = has_official_succession_law_tt
					has_realm_law = official_succession_law
				}
				custom_tooltip = {
					text = has_unlanded_adult_son_tt
					any_child = {
						is_alive = yes
						is_adult = yes
						is_male = yes
						is_landed = no
					}
				}
		}
		trigger_if = { # 请设军府
			limit = { scope:convert_to_milita = yes }
			custom_tooltip = {
				text = IS_MILITA
				is_milita_government_trigger = no
			}
			custom_tooltip = {
				text = prestige_level_3_tt	
				OR = {
					prestige_level >= 3
					dynasty = { dynasty_prestige_level >= 2 }
				}
			}
			custom_tooltip = { 
				text = perks_in_martial_lifestyle_10
				perks_in_martial_lifestyle >= 10
			}
		}
		trigger_if = { # 请设方镇
			limit = { scope:transfer_to_legion = yes }
			custom_tooltip = {
				text = IS_LEGION
				vassal_contract_has_flag = imperial_contract_1
				NOT = { vassal_contract_has_flag = imperial_legion_2 }
			}
			custom_tooltip = { 
				text = perstige_level_5_tt
				OR = {
					is_powerful_vassal = yes
					prestige_level >= 3
				}
			}
			custom_tooltip = {
				text = perks_in_martial_lifestyle_20
				perks_in_martial_lifestyle >= 20
			}
		}
		trigger_if = { # 留后册命
			limit = { scope:heir_succession = yes }
			is_ai = no
			has_realm_law = official_succession_law
			custom_tooltip = {
				text = IS_LEGION
				vassal_contract_has_flag = imperial_contract_1
			}
			custom_tooltip = { 
				text = perstige_level_5_tt
				OR = {
					is_powerful_vassal = yes
					prestige_level >= 3
				}
			}
			custom_tooltip = {
				text = perks_in_martial_lifestyle_20
				perks_in_martial_lifestyle >= 20
			}
		}
	}

	widget = {
		gui = "decision_view_widget_petition_liege"
		controller = decision_option_list_controller
		decision_to_second_step_button = "CHOOSE_PETITION_DECISION_NEXT_STEP_BUTTON"

		item = { # 讨官
			value = ask_for_bureaucrat_position
			is_valid = {
				custom_tooltip = { #
					text = has_official_succession_law_tt
					has_realm_law = official_succession_law
				}
				custom_tooltip = {
					text = has_unlanded_adult_son_tt
					any_child = {
						is_alive = yes
						is_adult = yes
						is_male = yes
						is_landed = no
					}
				}
			}
			current_description = ask_for_bureaucrat_position_desc
			localization = ask_for_bureaucrat_position
			icon = "gfx/interface/icons/message_feed/faction.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		item = { # 请设军府
			value = convert_to_milita
			is_valid = {
				custom_tooltip = {
					text = prestige_level_3_tt	
					OR = {
						prestige_level >= 3
						dynasty = { dynasty_prestige_level >= 2 }
					}
				}
				custom_tooltip = { 
					text = perks_in_martial_lifestyle_10
					perks_in_martial_lifestyle >= 10
				}
			}
			current_description = convert_to_milita_contract_decision_desc
			localization = convert_to_milita_contract_decision
			icon = "gfx/interface/illustrations/decisions/decision_realm.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		item = { # 请设方镇
			value = transfer_to_legion
			is_valid = {
				custom_tooltip = { 
					text = perstige_level_5_tt
					OR = {
						is_powerful_vassal = yes
						prestige_level >= 3
					}
				}
				#custom_tooltip = {
					#text = perks_in_martial_lifestyle_20
					#perks_in_martial_lifestyle >= 20
				#}
			}
			
			current_description = transfer_to_legion_contract_decision_desc
			localization = transfer_to_legion_contract_decision
			icon = "gfx/interface/illustrations/decisions/decision_realm.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		item = { # 留后册命
			value = heir_succession
			is_valid = {
				custom_tooltip = { 
					text = perstige_level_5_tt
					OR = {
						is_powerful_vassal = yes
						prestige_level >= 3
					}
				}
				#custom_tooltip = {
					#text = perks_in_martial_lifestyle_20
					#perks_in_martial_lifestyle >= 20
				#}
			}
			
			current_description = heir_succession_desc
			localization = heir_succession
			icon = "gfx/interface/illustrations/decisions/decision_realm.dds"
			ai_chance = { value = 0 } # Currently unused
		}
	}

	effect = {
		custom_tooltip = petition_liege_decision_effects
		if = {
			limit = {
				top_liege = { is_ai = yes }
			}
			custom_description_no_bullet = { text = petition_liege_warning_effect }
		}
		show_as_tooltip = {
			switch = {
				trigger = has_trait 
				shy = { add_stress = medium_stress_impact_gain }
				arrogant = { add_stress = medium_stress_impact_gain }
			}
		}
		if = { # 讨官
			limit = { scope:ask_for_bureaucrat_position = yes }
			set_variable = {
				name = petition_type
				value = flag:bureaucrat_position
			}
		}
		else_if = { # 请设军府
			limit = { scope:convert_to_milita = yes }
			set_variable = {
				name = petition_type
				value = flag:milita
			}
		}
		else_if = { # 请设方镇
			limit = { scope:transfer_to_legion = yes }
			set_variable = {
				name = petition_type
				value = flag:legion
			}
		}
		else_if = { # 留后册命
			limit = { scope:heir_succession = yes }
			set_variable = {
				name = petition_type
				value = flag:heir_succession
			}
		}
		top_liege = { save_scope_as = petition_liege }
		start_travel_plan = {
			destination = top_liege.capital_province
			on_start_on_action = oe_petition_liege_start
			on_travel_planner_cancel_on_action = oe_petition_liege_travel_planner_exit 
			on_arrival_event = oe_petition_liege.9000
			on_arrival_destinations = all_but_last
		}
	}
	
	ai_potential = {
		always = no # Only players can do this. AI vassals go through the normal court events/hold court activity.
	}
}
