#部落转封建（原版）
#封建转羁縻
#部落全地产转封建（原版）
#部落全地产转羁縻
#民州转军府
#军府转藩镇
#帝王采纳律令制

#封建转军镇
convert_to_imperialism_decision = { 
	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"
	major = yes
	desc = convert_to_imperialism_decision_desc
	
	ai_check_interval = 36
	
	is_shown = {
		OR = {
			any_liege_or_above = { 
				culture = { has_cultural_pillar = heritage_chinese }
			}
			any_neighboring_top_liege_realm_owner = { has_title = title:e_celestia }
			liege = {
				OR = {
					has_government = imperial_government
					has_government = corps_government
				}
			}
		}
		OR = {
			has_government = feudal_government
			has_government = clan_government
		}
		exists = capital_province
		capital_province = { geographical_region = world_asia }
		is_independent_ruler = no
	}
	
	is_valid = {
		prestige_level >= high_prestige_level
		capital_province.county = {
			development_level >= convert_to_feudalism_development_requirement
		}		
	}
	
	cost = {
		prestige = 350
	}
	
	effect = {
		change_government = corps_government
		add_realm_law_skip_effects = corps_succession_law
	}
	
	ai_potential = {
		#always = yes
	}
	
	ai_will_do = {
		base = 100
		modifier = { #Go for the more lenient decision if this is the case
			add = -25
			liege = { has_government = feudal_government }  
		}
		modifier = { #Go for the more lenient decision if this is the case
			add = -50
			liege = { has_government = tribal_government } 
		}
	}
}

#举部转羁縻
convert_whole_realm_to_imperialism_decision = { 
	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"
	major = yes
	desc = convert_whole_realm_to_imperialism_decision_desc

	ai_check_interval = 30

	is_shown = {
		highest_held_title_tier < tier_empire
		has_government = tribal_government
		is_independent_ruler = no
		liege = {
			OR = {
				has_government = imperial_government
				has_government = corps_government
			}
		}
	}

	is_valid = {
		has_realm_law = tribal_authority_3
		custom_description = {
			text = faith_is_reformed
			subject = root
			faith = { NOT = { has_doctrine_parameter = unreformed } }
		}
		prestige_level >= 3
		capital_province.county = {
			development_level >= convert_to_feudalism_development_requirement
		}
		OR = {
			top_liege = {
				AND = {
					culture = { has_cultural_pillar = heritage_chinese }
					has_title = title:e_celestia
				}
			}
			any_neighboring_top_liege_realm_owner = { 
				AND = {
					culture = { has_cultural_pillar = heritage_chinese }
					has_title = title:e_celestia
				}
			}
		}
		custom_description = { #You need to have 70% of all (non-regional/unique) tribal innovations!
			text = has_all_tribal_innovations
			subject = root.culture
			culture = {
				calc_true_if = {
					amount >= 9
					has_innovation = innovation_motte
					has_innovation = innovation_catapult
					has_innovation = innovation_barracks
					has_innovation = innovation_mustering_grounds
					has_innovation = innovation_bannus
					has_innovation = innovation_quilted_armor
					has_innovation = innovation_gavelkind
					has_innovation = innovation_crop_rotation
					has_innovation = innovation_city_planning
					has_innovation = innovation_casus_belli
					has_innovation = innovation_plenary_assemblies
					has_innovation = innovation_ledger
					has_innovation = innovation_development_01
					has_innovation = innovation_currency_01
				}
			}
		}
	}

	cost = {
		prestige = 1000
		piety = 500
	}

	effect = {
		convert_whole_realm_to_feudalism_effect = yes
		change_government = imperial_government
		trigger_event = major_decisions.0001
		save_scope_as = actor
		hidden_effect = {
			every_vassal = {
				trigger_event = {
					id = major_decisions.0002
					days = 3
				}
			}
		}
	}

	ai_potential = {
		NOT = { has_title = title:e_mongol_empire } #Stop the Mongols from slowing their conquest.
	}

	ai_will_do = {
		base = 10
		modifier = { #Go for the more lenient decision if this is the case
			add = 200
			liege = { has_government = imperial_government } 
		}
	}
}

#请封军府
convert_to_legion_decision = { 
	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"
	title = convert_to_legion_decision
	confirm_text = convert_to_legion_decision_confirm
	major = yes
	desc = convert_to_legion_decision_desc
	selection_tooltip = convert_to_legion_decision_tooltip
	
	ai_check_interval = 36
	
	is_shown = {
		has_government = imperial_government
		NOT = { vassal_contract_has_flag = imperial_contract_1 }
		is_ai = no
		is_independent_ruler = no
	}
	
	is_valid = {
		prestige_level >= high_prestige_level
		dynasty = { dynasty_prestige_level >= 4 }
		OR = {
			custom_description = {
				text = martial_lifestyle_perks_10
				martial_lifestyle_perks >= 10
			}
			AND = {	
				custom_description = {
					text = perk_points_assigned_11
					perk_points_assigned > 11
				}
				custom_description = {
					text = perks_in_tree_chivalry				
						perks_in_tree = {
							tree = chivalry
							value > 8
						}
				}
			}		
			liege = { has_realm_law = crown_authority_0 }
			liege = { has_realm_law = crown_authority_1 }
		}
	}
	
	cost = {
		prestige = 450
	}
	
	effect = {
		change_government_legion_government_effect = yes
		add_realm_law_skip_effects = crown_authority_2
	}
	
	
	ai_potential = {
		is_ruler = yes
	}
	
	ai_will_do = {
		base = 0
		modifier = { #Go for the more lenient decision if this is the case
			add = 15
			prestige_level > 3
		}
		modifier = { #Go for the more lenient decision if this is the case
			add = 15
			dynasty = { dynasty_prestige_level >3 }
		}
		modifier = { #Go for the more lenient decision if this is the case
			add = 50
			martial_lifestyle_perks > 18
		}
	}
}

#请封藩镇
transfer_to_corps_decision = { 
	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"
	major = yes
	title = transfer_to_corps_decision
	confirm_text = transfer_to_corps_decision_confirm
	desc = transfer_to_corps_decision_desc
	selection_tooltip = transfer_to_corps_decision_tooltip
	
	ai_check_interval = 38
	
	is_shown = {
		has_government = imperial_government
        vassal_contract_has_flag = imperial_contract_1
		NOT = { vassal_contract_has_flag = imperial_corps_2 }
		is_ai = no
		is_independent_ruler = no
	}
	
	is_valid = {
		is_powerful_vassal = yes
		prestige_level >= max_prestige_level
		OR = {
			custom_description = {
				text = martial_lifestyle_perks_20
				martial_lifestyle_perks >= 20
			}	
			AND = {
				custom_description = {
					text = perk_points_assigned_20
					perk_points_assigned > 20
				}	
				custom_description = {
					text = perk_points_assigned_20
					perk_points_assigned > 20
				}
				custom_description = {
					text = perks_in_tree_strategy
					perks_in_tree = {
						tree = strategy
						value > 8
					}
				}
				custom_description = {
					text = perks_in_tree_authority
					perks_in_tree = {
						tree = authority
						value > 8
					}
				}
			}
			liege = { has_realm_law = crown_authority_0 }
			liege = { has_realm_law = crown_authority_1 }
		}
	}
	
	cost = {
		prestige = 1000
	}
	
	effect = {
		change_government_corps_government_effect = yes
		add_realm_law_skip_effects = crown_authority_3
		add_realm_law_skip_effects = corps_succession_law
	}
	
	
	ai_potential = {
		is_ruler = yes
	}
	
	ai_will_do = {
		base = 0
		modifier = { #Go for the more lenient decision if this is the case
			add = 15
			prestige_level >= 5
		}
		modifier = { #Go for the more lenient decision if this is the case
			add = 15
			dynasty = { dynasty_prestige_level >= 5 }
		}
		modifier = { #Go for the more lenient decision if this is the case
			add = 50
			martial_lifestyle_perk_points >= 27
		}
	}
}

#独立封建军镇转律令
adopt_imperial_government_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"
	major = yes
	ai_check_interval = 36

	desc = adopt_imperial_government_decision_desc
	selection_tooltip = adopt_imperial_government_decision_tooltip

	is_shown = {
		OR = {
			has_government = feudal_government
			has_government = clan_government
			has_government = corps_government
			has_government = bureau_government
			has_government = ulus_government
		}
		OR = {
			is_independent_ruler = yes
			top_liege = { has_title = title:e_celestia }
		}
	}

	is_valid = {
			highest_held_title_tier > tier_duchy
			OR = {
				culture = { has_cultural_pillar = heritage_chinese }
				top_liege = { has_title = title:e_celestia }
				AND = {
					highest_held_title_tier <= tier_kingdom
					any_neighboring_top_liege_realm_owner = { 
						AND = {
							culture = { has_cultural_pillar = heritage_chinese }
							has_title = title:e_celestia
						}
					}
				}
				culture = {
					cultural_acceptance = {
						target = culture:han
						value >= 75
					}
				}
				AND = {
					has_government = ulus_government
					capital_province = {
						geographical_region = world_asia_china
					}
				}
				AND = {
					any_neighboring_top_liege_realm_owner = { 
						is_oe_imperial_official_trigger = yes
					}
					capital_province = {
						geographical_region = world_asia_china
					}
				}
			}
			capital_province.county = {
				development_level >= convert_to_feudalism_development_requirement
			}
	}

	is_valid_showing_failures_only = {
		is_at_war = no
	}

	cost = {
		prestige = 500
	}

	effect = {
		change_government = imperial_government
		add_realm_law_skip_effects = tradition_succession_law
	}
	
	ai_potential = {
		NOT = { has_title = title:e_mongol_empire } #Stop the Mongols from slowing their conquest.
	}

	ai_will_do = {
		base = 100
	}
}

#转二元政体
convert_whole_realm_to_ulus_decision = { 
	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"
	major = yes
	desc = convert_whole_realm_to_ulus_decision_desc

	ai_check_interval = 100

	is_shown = {
		highest_held_title_tier >= tier_kingdom
		OR = {
			has_government = tribal_government
			has_government = feudal_government
		}
		is_independent_ruler = yes
	}

	is_valid = {
		has_realm_law = tribal_authority_3
		prestige_level >= 3
		capital_province.county = {
			development_level >= convert_to_feudalism_development_requirement
		}
		OR = {
			any_neighboring_top_liege_realm_owner = { 
				OR = {
					culture = { has_cultural_pillar = heritage_chinese }
					has_title = title:e_celestia
				}
			}
			any_vassal_or_below = {
				OR = {
					has_government = imperial_government
					has_government = bureau_government
					has_government = corps_government
				}
				culture = { has_cultural_pillar = heritage_chinese }
			}
			has_title = title:e_cathay
		}
		custom_description = { #You need to have 70% of all (non-regional/unique) tribal innovations!
			text = has_all_tribal_innovations
			subject = root.culture
			culture = {
				calc_true_if = {
					amount >= 9
					has_innovation = innovation_motte
					has_innovation = innovation_catapult
					has_innovation = innovation_barracks
					has_innovation = innovation_mustering_grounds
					has_innovation = innovation_bannus
					has_innovation = innovation_quilted_armor
					has_innovation = innovation_gavelkind
					has_innovation = innovation_crop_rotation
					has_innovation = innovation_city_planning
					has_innovation = innovation_casus_belli
					has_innovation = innovation_plenary_assemblies
					has_innovation = innovation_ledger
					has_innovation = innovation_development_01
					has_innovation = innovation_currency_01
				}
			}
		}
	}

	cost = {
		prestige = 500
		piety = 500
	}

	effect = {
		change_government = ulus_government
		trigger_event = major_decisions.0001
		save_scope_as = actor
		hidden_effect = {
			every_vassal = {
				trigger_event = {
					id = major_decisions.0002
					days = 3
				}
			}
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}


#A decision to feudalize the entire realm (wow!)
convert_whole_realm_to_feudalism_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"
	major = yes
	desc = convert_whole_realm_to_feudalism_decision_desc

	ai_check_interval = 36

	is_shown = {
		has_government = tribal_government
		OR = {
			is_independent_ruler = yes
			AND = {
				is_independent_ruler = no
				liege = {
					NOR = {
						has_government = feudal_government
						has_government = clan_government
					}
				}
			}
		}
	}

	is_valid = {
		has_realm_law = tribal_authority_3
		custom_description = {
			text = faith_is_reformed
			subject = root
			faith = { NOT = { has_doctrine_parameter = unreformed } }
		}
		prestige_level >= 2
		capital_province.county = {
			development_level >= convert_to_feudalism_development_requirement
		}
		NOR = {
			culture = { has_cultural_parameter = can_recruit_open_specialist }
			culture = { has_cultural_parameter = unlock_maa_horse_archers }
			culture = { has_cultural_parameter = unlock_maa_mangudai }
		}
		NOR = {
			capital_province = { geographical_region = world_steppe_tartaria }
			capital_province = { geographical_region = world_steppe }
		}
		custom_description = { #You need to have 70% of all (non-regional/unique) tribal innovations!
			text = has_all_tribal_innovations
			subject = root.culture
			culture = {
				calc_true_if = {
					amount >= 9
					has_innovation = innovation_motte
					has_innovation = innovation_catapult
					has_innovation = innovation_barracks
					has_innovation = innovation_mustering_grounds
					has_innovation = innovation_bannus
					has_innovation = innovation_quilted_armor
					has_innovation = innovation_gavelkind
					has_innovation = innovation_crop_rotation
					has_innovation = innovation_city_planning
					has_innovation = innovation_casus_belli
					has_innovation = innovation_plenary_assemblies
					has_innovation = innovation_ledger
					has_innovation = innovation_development_01
					has_innovation = innovation_currency_01
				}
			}
		}
	}

	cost = {
		prestige = 200
	}

	effect = {
		trigger_event = major_decisions.0001
		save_scope_as = actor
		convert_whole_realm_to_feudalism_effect = yes
		hidden_effect = {
			every_vassal = {
				trigger_event = {
					id = major_decisions.0002
					days = 3
				}
			}
		}
	}

	ai_potential = {
		NOR = { has_title = title:e_mongol_empire has_title = title:e_cathay } #Stop the Mongols from slowing their conquest.
	}

	ai_will_do = {
		base = 100
	}
}

#守护神
select_personal_deity_hinduism_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	desc = select_personal_deity_hinduism_decision_desc
	selection_tooltip = select_personal_deity_hinduism_decision_tooltip

	is_shown = {
		OR = {
			religion = religion:hinduism_religion
			religion = religion:buddhism_religion
		}
		faith = {
			has_doctrine_parameter = select_personal_god_active
		}
	}

	is_valid = {
	}

	is_valid_showing_failures_only = {
		# Have to at _least_ not be in piety debt.
		piety >= 0
	}

	cooldown = { years = 2 }

	effect = {
		custom_tooltip = select_personal_deity_hinduism_decision_tt
		trigger_event = religious_decision.0101
	}

	ai_check_interval = 96
	
	ai_potential = {
		piety >= minor_piety_value
		NOR = {
			has_character_modifier = bhakti_hinduism_ganga
			has_character_modifier = bhakti_hinduism_saraswati
			has_character_modifier = bhakti_hinduism_kali
			has_character_modifier = bhakti_hinduism_kubera
			has_character_modifier = bhakti_vaishnavism_lakishmi
			has_character_modifier = bhakti_vaishnavism_jagganath
			has_character_modifier = bhakti_vaishnavism_hayagriva
			has_character_modifier = bhakti_shaivism_parvati
			has_character_modifier = bhakti_shaivism_virabhadra
			has_character_modifier = bhakti_shaivism_munishwarar
			has_character_modifier = bhakti_shaivism_dakshinamoorthy
			has_character_modifier = bhakti_smartism_ganesha
			has_character_modifier = bhakti_smartism_vishnu
			has_character_modifier = bhakti_smartism_shiva
		}
	}

	ai_will_do = {
		base = 100
	}
}

#觐见
pay_homage_decision = {
	ai_check_interval = 45
	picture = "gfx/interface/illustrations/decisions/decision_knight_kneeling.dds"
	major = yes

	cost = {
		prestige = standard_activity_cost
		gold = {
			value = 0
			if = {
				limit = {
					exists = scope:pay_homage_gold
					scope:pay_homage_gold = yes
				}
				add = medium_gold_value
			}
		}
	}

	is_shown = {
		is_landed = yes
		is_independent_ruler = no
		OR = {
			has_government = feudal_government
			has_government = clan_government
			has_government = imperial_government
		}
		liege = { has_royal_court = yes }
	}

	is_valid = {
		custom_tooltip = {
			text = pay_homage_grace_valid_tt
			trigger_if = {
				limit = { has_variable = pay_homage_grace }
				NOT = { var:pay_homage_grace = liege }
			}
		}
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		liege = { is_available_adult = yes }
		is_at_war_with_liege = no
		trigger_if = {
			limit = {
				is_ai = no
				has_royal_court = yes
			}
			has_spawned_court_events = no # should only be used for human players
		}
		
		trigger_if = {
			limit = { has_variable = pay_homage_grace } # Has not paid homage to this liege before
			custom_tooltip = {
				text = pay_homage_grace_tt
				NOT = { var:pay_homage_grace = liege }
			}
		}
		trigger_if = {
			limit = {
				is_ai = yes
			}
			NOT = {
				liege = { has_variable = pay_homage_cooldown }
			}
		}
	}

	widget = {
		gui = "decision_view_widget_pay_homage"
		controller = decision_option_list_controller
		decision_has_second_step = yes
		decision_custom_widget_container = "custom_widgets_container_step_two"
		decision_to_second_step_button = "PAY_HOMAGE_DECISION_NEXT_STEP_BUTTON"

		item = { # Submission
			value = pay_homage_submission
			is_valid = {}
			current_description = pay_homage_submission_desc
			localization = pay_homage_decision_option_submission
			icon = "gfx/interface/icons/icon_liege.dds"
			ai_chance = { # Always likely
				value = 50
				if = { # Generous vassals want to give gold if they can!
					limit = {
						ai_greed <= -50
						gold >= medium_gold_value
					}
					add = -50
				}
			}
		}

		item = { # Hook
			value = pay_homage_hook
			is_valid = {
				custom_tooltip = { # Liege does not already have a hook
					text = pay_homage_hook_tt
					NOT = {
						liege = { has_hook = prev } 
					}
				}
			}
			current_description = pay_homage_hook_desc
			localization = pay_homage_decision_option_hook
			icon = "gfx/interface/icons/message_feed/hook.dds"
			ai_chance = { # More likely if family
				value = 25
				if = {
					limit = { is_close_or_extended_family_of = liege }
					add = 25
				}
				if = { # Certain AI's really do not want to be indebted
					limit = {
						OR = {
							has_trait = paranoid
							has_trait = arrogant
							ai_greed >= 50
						}
					}
					add = -50
				}
			}
		}

		item = { # Contract
			value = pay_homage_contract
			is_shown = { has_government = feudal_government }
			is_valid = {
				custom_tooltip = { # Contract can be changed
					text = pay_homage_contract_modifiable_tt
					vassal_contract_has_modifiable_obligations = yes
				}
				custom_tooltip = { # Contract not at highest
					text = pay_homage_contract_increasable_tt
					OR = {
						vassal_contract_obligation_level_can_be_increased = feudal_government_taxes
						vassal_contract_obligation_level_can_be_increased = feudal_government_levies
					}
				}
			}
			current_description = pay_homage_contract_desc
			localization = pay_homage_decision_option_contract
			icon = "gfx/interface/icons/message_feed/a_catch_all_councillor_icon.dds"
			ai_chance = { # More likely if contract is already lenient
				value = 10
				if = {
					limit = {
						OR = {
							vassal_contract_obligation_level:feudal_government_levies = feudal_levies_low_level
							vassal_contract_obligation_level:feudal_government_taxes = feudal_tax_low_level
						}
					}
					add = 40
				}
				else_if = {
					limit = {
						OR = {
							vassal_contract_obligation_level:feudal_government_levies = feudal_levies_exempt_level
							vassal_contract_obligation_level:feudal_government_taxes = feudal_tax_exempt_level
						}
					}
					add = 90
				}
				if = { # Certain AI's really do not want increased obligations
					limit = {
						OR = {
							has_trait = ambitious
							has_trait = arrogant
							ai_greed >= 50
						}
					}
					add = -50
				}
			}
		}

		item = { # Contract
			value = pay_homage_contract
			is_shown = { has_government = imperial_government }
			is_valid = {
				custom_tooltip = { # Contract can be changed
					text = pay_homage_contract_modifiable_tt
					vassal_contract_has_modifiable_obligations = yes
				}
				custom_tooltip = { # Contract not at highest
					text = pay_homage_contract_increasable_tt
					OR = {
						vassal_contract_obligation_level_can_be_increased = imperial_government_taxes
						vassal_contract_obligation_level_can_be_increased = imperial_government_levies
					}
				}
			}
			current_description = pay_homage_contract_desc
			localization = pay_homage_decision_option_contract
			icon = "gfx/interface/icons/message_feed/a_catch_all_councillor_icon.dds"
			ai_chance = { # More likely if contract is already lenient
				value = 10
				if = {
					limit = {
						OR = {
							vassal_contract_obligation_level:imperial_government_levies = imperial_levies_low_level
							vassal_contract_obligation_level:imperial_government_taxes = imperial_tax_low_level
						}
					}
					add = 40
				}
				else_if = {
					limit = {
						OR = {
							vassal_contract_obligation_level:imperial_government_levies = imperial_levies_exempt_level
							vassal_contract_obligation_level:imperial_government_taxes = imperial_tax_exempt_level
						}
					}
					add = 90
				}
				if = { # Certain AI's really do not want increased obligations
					limit = {
						OR = {
							has_trait = ambitious
							has_trait = arrogant
							ai_greed >= 50
						}
					}
					add = -50
				}
			}
		}

		item = { # Gold
			value = pay_homage_gold
			is_valid = {
				custom_tooltip = { # Can afford gold homage
					text = pay_homage_gold_tt
					gold >= medium_gold_value # Can afford gold homage
				}
			}
			current_description = pay_homage_gold_desc
			localization = pay_homage_decision_option_gold
			icon = "gfx/interface/icons/message_feed/money.dds"
			ai_chance = { # More likely if rich
				value = 50
				if = {
					limit = { gold > major_gold_value }
					add = 50
				}
				
				if = { # Certain AI's really do not want to part with gold
					limit = {
						ai_greed >= 50
					}
					add = -100
				}
			}
		}
	}

	effect = {
		set_variable = {
			name = homage_liege_scope
			value = liege
			months = 3
		}
		custom_tooltip = pay_homage_decision_effects
		custom_description_no_bullet = { text = pay_homage_gift_warning_effect }
		if = { # Submission
			limit = { scope:pay_homage_submission = yes }
			set_variable = {
				name = homage_type
				value = flag:homage_submission
			}
		}
		else_if = { # Gift
			limit = { scope:pay_homage_gold = yes }
			set_variable = {
				name = homage_type
				value = flag:homage_gold
			}
			custom_tooltip = pay_homage_decision_effects_gold
		}
		else_if = { # Hook
			limit = { scope:pay_homage_hook = yes }
			set_variable = {
				name = homage_type
				value = flag:homage_hook
			}
			custom_tooltip = pay_homage_decision_effects_hook
		}
		else_if = { # Contract
			limit = { scope:pay_homage_contract = yes has_government = feudal_government }
			set_variable = {
				name = homage_type
				value = flag:homage_contract
			}
			if = {
				limit = {
					vassal_contract_obligation_level:feudal_government_levies < vassal_contract_obligation_level:feudal_government_taxes
					vassal_contract_obligation_level_can_be_increased = feudal_government_levies
				}
				custom_tooltip = pay_homage_decision_effects_contract_levies
			}
			else_if = {
				limit = {
					vassal_contract_obligation_level:feudal_government_taxes < vassal_contract_obligation_level:feudal_government_levies
					vassal_contract_obligation_level_can_be_increased = feudal_government_taxes
				}
				custom_tooltip = pay_homage_decision_effects_contract_gold
			}
			else = {
				if = {
					limit = { vassal_contract_obligation_level_can_be_increased = feudal_government_taxes }
					custom_tooltip = pay_homage_decision_effects_contract_gold
				}
				else = { custom_tooltip = pay_homage_decision_effects_contract_gold }
			}			
			hidden_effect = { set_vassal_contract_modification_blocked = yes }
		}
		stress_impact = {
			shy = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
		}
		hidden_effect = {
			# Spawn the Petition Liege activity
			if = {
				limit = { has_variable = pay_homage_grace }
				remove_variable = pay_homage_grace
			}
			set_variable = {
				name = pay_homage_grace
				value = liege
			}
			liege = {
				capital_province = {
					spawn_activity = {
						type = activity_pay_homage
						owner = root
					}
				}
				if = { # Make sure the AI doesn't spam homage
					limit = {
						NOT = { has_variable = pay_homage_cooldown }
					}
					set_variable = { # To stop AI vassals taking decision all at once
						name = pay_homage_cooldown
						years = 2
					}
				}
				else = {
					remove_variable = pay_homage_cooldown
					set_variable = { # To stop AI vassals taking decision all at once
						name = pay_homage_cooldown
						years = 2
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_at_war = no
	}

	ai_will_do = {
		base = 0
		modifier = {
			add = 50
			prestige > standard_activity_cost
		}
		modifier = { # AI's who can give gold are more likely
			add = 50
			gold >= medium_gold_value
			ai_greed < 50
			primary_title.tier > tier_county
		}
		modifier = {
			add = -50
			has_relation_rival = liege
		}
		modifier = {
			add = -25
			opinion = {
				target = liege
				value < 0
			}
		}
		modifier = { # Dukes/kings should be more weighted
			add = 25
			primary_title.tier >= tier_duchy
		}
		modifier = { # Barons should be less weighted
			add = -25
			primary_title.tier < tier_county
		}
	}
}