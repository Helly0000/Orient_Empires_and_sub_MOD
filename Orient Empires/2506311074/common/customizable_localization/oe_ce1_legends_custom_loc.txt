#GetMythicalFounder
#GetRandomExteriorDetail
#GetRandomInteriorDetail
#GetWritingMaterial
#GetMusicalInstrument
#GetMusicalInstrumentPlural
#GetAncestorName
#GetSaintlyTrait
#GetPiousAdj
#GetCustodianSynonym

#reusing the claim throne custom loc to be a generic effect
#IMPORTANT: use the grab_appropriate_chronicler_effect in the immediate of the event or similar so it sets your mythical ancestor variable - this is done so we can always refer to the same ancestor
#ask before expanding pls

GetWritingMaterial = {
	type = character
	random_valid = yes
	
	text = { # Parchment
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_middle_east_jerusalem
					AND = {
						geographical_region = world_steppe
						culture = { has_cultural_era_or_later = culture_era_late_medieval }
					}
				}
			}
		}
		localization_key = GetWritingMaterial_parchment
	}
	
	text = { # Papyrus
		trigger = {
			location = {
				geographical_region = custom_roman_aegyptus
			}
		}
		localization_key = GetWritingMaterial_papyrus
	}
	
	text = { # Vellum
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = ghw_region_afghanistan
					geographical_region = world_india_rajastan
				}
			}
		}
		localization_key = GetWritingMaterial_vellum
	}
	
	text = { # Palm leaf
		trigger = {
			location = {
				OR = {
					geographical_region = world_india
					geographical_region = world_burma
					geographical_region = world_asia_southeast
				}
			}
		}
		localization_key = GetWritingMaterial_palm_leaf
	}
	
	text = { # Stone stele
		trigger = {
			location = {
				OR = {
					geographical_region = world_steppe
					geographical_region = world_steppe_tartaria
				}
			}
		}
		localization_key = GetWritingMaterial_stone_stele
	}

	text = { # Asia
		trigger = {
			location = {
				OR = {
					geographical_region = world_asia
				}
			}
		}
		localization_key = GetWritingMaterial_bamboo_slip
	}
	
	text = { # Birch bark
		trigger = {
			location = {
				OR = {
					geographical_region = world_india
					geographical_region = world_tibet
					geographical_region = ghw_region_russia #Old Slavonic
				}
			}
		}
		localization_key = GetWritingMaterial_birch_bark
		fallback = yes
	}
}

GetWritingMaterialPlural = {
	type = character
	random_valid = yes
	
	text = { # Parchment
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_middle_east_jerusalem
					AND = {
						geographical_region = world_steppe
						culture = { has_cultural_era_or_later = culture_era_late_medieval }
					}
				}
			}
		}
		localization_key = GetWritingMaterial_parchment_plural
	}
	
	text = { # Papyrus
		trigger = {
			location = {
				geographical_region = custom_roman_aegyptus
			}
		}
		localization_key = GetWritingMaterial_papyrus_plural
	}
	
	text = { # Vellum
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = ghw_region_afghanistan
					geographical_region = world_india_rajastan
				}
			}
		}
		localization_key = GetWritingMaterial_vellum_plural
	}
	
	text = { # Palm leaf
		trigger = {
			location = {
				OR = {
					geographical_region = world_india
					geographical_region = world_burma
					geographical_region = world_asia_southeast
				}
			}
		}
		localization_key = GetWritingMaterial_palm_leaf_plural
	}
	
	text = { # Stone stele
		trigger = {
			location = {
				OR = {
					geographical_region = world_steppe
					geographical_region = world_steppe_tartaria
				}
			}
		}
		localization_key = GetWritingMaterial_stone_stele_plural
	}
	text = { # Asia
		trigger = {
			location = {
				OR = {
					geographical_region = world_asia
				}
			}
		}
		localization_key = GetWritingMaterial_bamboo_slip_plural
	}
	text = { # Birch bark
		trigger = {
			location = {
				OR = {
					geographical_region = world_india
					geographical_region = world_tibet
					geographical_region = ghw_region_russia #Old Slavonic
				}
			}
		}
		localization_key = GetWritingMaterial_birch_bark_plural
		fallback = yes
	}
}

GetMusicalInstrument = {
	type = character
	random_valid = yes
	
	text = { # Flute
		localization_key = GetMusicalInstrument_flute
	}
	
	text = { # Drum
		fallback = yes
		localization_key = GetMusicalInstrument_drum
	}
	
	text = { # Trumpet
		localization_key = GetMusicalInstrument_trumpet
	}
	
	text = { # Harp
		localization_key = GetMusicalInstrument_harp
	}
	
	text = { # Lute
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_middle_east
					geographical_region = world_africa_north
				}
			}
		}
		localization_key = GetMusicalInstrument_lute
	}
	
	text = { # Fiddle
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_middle_east
					geographical_region = world_africa_north
				}
			}
		}
		localization_key = GetMusicalInstrument_fiddle
	}
	
	text = { # Lyre
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_middle_east
					geographical_region = world_africa_north
					geographical_region = world_africa_east
				}
			}
		}
		localization_key = GetMusicalInstrument_lyre
	}
	
	text = { # Tambourine
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_middle_east
					geographical_region = world_africa_north
				}
			}
		}
		localization_key = GetMusicalInstrument_tambourine
	}

	text = { # Bagpipes
		trigger = {
			culture = { has_cultural_era_or_later = culture_era_high_medieval }
		}
		localization_key = GetMusicalInstrument_bagpipe
	}
	
	text = { # Hurdy-Gurdy
		trigger = {
			location = {
				geographical_region = world_europe
			}
			culture = { has_cultural_era_or_later = culture_era_late_medieval }
		}
		localization_key = GetMusicalInstrument_hurdy_gurdy
	}
}

GetMusicalInstrumentPlural = {
	type = character
	random_valid = yes
	
	text = { # Flute
		localization_key = GetMusicalInstrument_flute_plural
	}
	
	text = { # Drum
		fallback = yes
		localization_key = GetMusicalInstrument_drum_plural
	}
	
	text = { # Trumpet
		localization_key = GetMusicalInstrument_trumpet_plural
	}
	
	text = { # Harp
		localization_key = GetMusicalInstrument_harp_plural
	}
	
	text = { # Lute
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_middle_east
					geographical_region = world_africa_north
				}
			}
		}
		localization_key = GetMusicalInstrument_lute_plural
	}
	
	text = { # Fiddle
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_middle_east
					geographical_region = world_africa_north
				}
			}
		}
		localization_key = GetMusicalInstrument_fiddle_plural
	}
	
	text = { # Lyre
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_middle_east
					geographical_region = world_africa_north
					geographical_region = world_africa_east
				}
			}
		}
		localization_key = GetMusicalInstrument_lyre_plural
	}
	
	text = { # Tambourine
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_middle_east
					geographical_region = world_africa_north
				}
			}
		}
		localization_key = GetMusicalInstrument_tambourine_plural
	}

	text = { # Bagpipes
		trigger = {
			culture = { has_cultural_era_or_later = culture_era_high_medieval }
		}
		localization_key = GetMusicalInstrument_bagpipe_plural
	}
	
	text = { # Hurdy-Gurdy
		trigger = {
			location = {
				geographical_region = world_europe
			}
			culture = { has_cultural_era_or_later = culture_era_late_medieval }
		}
		localization_key = GetMusicalInstrument_hurdy_gurdy_plural
	}
}

GetPlagueEffect = {
	type = character
	random_valid = yes
	
	text = {
		localization_key = GetPlagueEffect_fire
	}
	
	text = {
		localization_key = GetPlagueEffect_limbs
	}
	
	text = {
		localization_key = GetPlagueEffect_thirdeye
	}
	
	text = {
		localization_key = GetPlagueEffect_nipple
	}

	text = {
		localization_key = GetPlagueEffect_blue
	}

	text = {
		localization_key = GetPlagueEffect_hairy
	}

	text = {
		localization_key = GetPlagueEffect_fingernails
	}

	text = {
		localization_key = GetPlagueEffect_eyes
	}
}

LegendaryShrineName = {
	type = province

	text = {
		trigger = {
			exists = var:leg_b_name
		}
		localization_key = checked_leg_b_name
	}

	text = {
		localization_key = building_type_legendary_shrine
	}
}

LegendaryPalaceName = {
	type = province

	text = {
		trigger = {
			exists = var:leg_b_name
		}
		localization_key = checked_leg_b_name
	}

	text = {
		localization_key = building_type_legendary_palace
	}
}

LegendaryStatueName = {
	type = province

	text = {
		trigger = {
			exists = var:leg_b_name
		}
		localization_key = checked_leg_b_name
	}

	text = {
		localization_key = building_type_legendary_statue
	}
}

LegendaryWatchtowerName = {
	type = province

	text = {
		trigger = {
			exists = var:leg_b_name
		}
		localization_key = checked_leg_b_name
	}

	text = {
		localization_key = building_type_legendary_watchtower
	}
}

LegendaryHuntingLodgeName = {
	type = province

	text = {
		trigger = {
			exists = var:leg_b_name
		}
		localization_key = checked_leg_b_name
	}

	text = {
		localization_key = building_type_legendary_hunting_lodge
	}
}

GetAncestorName = {
	type = legend

	text = {
		trigger = {
			exists = legend_property:ancestor_flag
		}
		localization_key = ancestor_flag_name
	}

	text = {
		trigger = {
			exists = legend_property:ancestor
		}
		localization_key = ancestor_name
	}
}

GetAncestorNamePossessive = {
	type = legend

	text = {
		trigger = {
			exists = legend_property:ancestor_flag
		}
		localization_key = ancestor_flag_name_possessive
	}

	text = {
		trigger = {
			exists = legend_property:ancestor
		}
		localization_key = ancestor_namepossessive
	}
}

GetAncestorFirstName = {
	type = legend

	text = {
		trigger = {
			exists = legend_property:ancestor_flag
		}
		localization_key = ancestor_flag_name
	}

	text = {
		trigger = {
			exists = legend_property:ancestor
		}
		localization_key = ancestor_firstname
	}
}

GetAncestorFirstNamePossessive = {
	type = legend

	text = {
		trigger = {
			exists = legend_property:ancestor_flag
		}
		localization_key = ancestor_flag_name_possessive
	}

	text = {
		trigger = {
			exists = legend_property:ancestor
		}
		localization_key = ancestor_firstnamepossessive
	}
}

GetAncestorNameNoTooltip = {
	type = legend

	text = {
		trigger = {
			exists = legend_property:ancestor_flag
		}
		localization_key = ancestor_flag_name
	}

	text = {
		trigger = {
			exists = legend_property:ancestor
		}
		localization_key = ancestor_namenotooltip
	}
}

GetAncestorNamePossessiveNoTooltip = {
	type = legend

	text = {
		trigger = {
			exists = legend_property:ancestor_flag
		}
		localization_key = ancestor_flag_name_possessive
	}

	text = {
		trigger = {
			exists = legend_property:ancestor
		}
		localization_key = ancestor_namepossessivenotooltip
	}
}

GetAncestorFirstNameNoTooltip = {
	type = legend

	text = {
		trigger = {
			exists = legend_property:ancestor_flag
		}
		localization_key = ancestor_flag_name
	}

	text = {
		trigger = {
			exists = legend_property:ancestor
		}
		localization_key = ancestor_firstnamenotooltip
	}
}

GetAncestorFirstNamePossessiveNoTooltip = {
	type = legend

	text = {
		trigger = {
			exists = legend_property:ancestor_flag
		}
		localization_key = ancestor_flag_name_possessive
	}

	text = {
		trigger = {
			exists = legend_property:ancestor
		}
		localization_key = ancestor_firstnamepossessivenotooltip
	}
}

GetBirthCircumstancesLegend = {
	type = legend

	text = {
		trigger = {
			legend_property:reason ?= flag:virgin
		}
		localization_key = born_to_a_virgin_mother
	}

	text = {
		trigger = {
			NOT = {
				legend_property:reason = flag:virgin
			}
		}
		localization_key = born_under_auspicious_stars
	}
}

GetSaintlyTrait = {
	type = character
	
	text = {
		trigger = {
			has_trait = theologian
		}
		localization_key = GetSaintlyTrait_theologian
	}

	text = {
		trigger = {
			has_trait = sayyid
		}
		localization_key = GetSaintlyTrait_sayyid
	}
}

GetPiousAdj = {
	type = character
	random_valid = yes
	
	text = {
		localization_key = GetPiousAdj_pious
	}
	text = {
		localization_key = GetPiousAdj_sacred
	}
	text = {
		localization_key = GetPiousAdj_holy
	}
	text = {
		localization_key = GetPiousAdj_devout
	}
	text = {
		localization_key = GetPiousAdj_religious
	}
	text = {
		localization_key = GetPiousAdj_saintly
	}
}

GetDescendantSynonym = {
	type = character
	random_valid = yes
	
	text = {
		localization_key = GetDescendantSynonym_descendant
	}
	text = {
		localization_key = GetDescendantSynonym_offspring
	}
	text = {
		localization_key = GetDescendantSynonym_heir
	}
	text = {
		localization_key = GetDescendantSynonym_progeny
	}
	text = {
		localization_key = GetDescendantSynonym_scion
	}
}

GetCustodianSynonym = {
	type = character
	random_valid = yes
	
	text = {
		localization_key = GetCustodianSynonym_custodian
	}
	text = {
		localization_key = GetCustodianSynonym_guardian
	}
	text = {
		localization_key = GetCustodianSynonym_protector
	}
	text = {
		localization_key = GetCustodianSynonym_keeper
	}
	text = {
		localization_key = GetCustodianSynonym_defender
	}
}