hm_replace_the_bureaucratic_interaction = {
	category = interaction_category_friendly
	common_interaction = yes
	greeting = positive
	#icon = "great_misit.dds"	
	desc = hm_replace_the_bureaucratic_interaction_desc
	needs_recipient_to_open = yes
	#ai_frequency = 480
	populate_actor_list = {
		scope:actor = {
			every_courtier_or_guest = {
				limit = { 
					is_adult = yes
					is_female = no
					is_ruler = no
				}
				add_to_list = characters
			}
		}
	}
	is_shown = {
		scope:recipient = { 
			is_vassal_of = scope:actor
			highest_held_title_tier <= tier_duchy
			is_bureau_government_trigger = yes
		}
		scope:actor = {
			has_government = imperial_government
			culture = {
				has_innovation = innovation_centralization_of_authority
			}
			is_independent_ruler = yes
		}
	}
	has_valid_target_showing_failures_only = {
		scope:secondary_actor = {
			is_incapable = no
			is_adult = yes
			has_trait = BureaucracyEmpire_lifestyle_bureaucrat
		}
		scope:recipient = {
			is_incapable = no
			is_adult = yes
			is_bureau_government_trigger = yes
		}
	}
		
	on_accept = {
		scope:recipient = {
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = change
				add_claim_on_loss = no
			}
			every_held_title = {
				limit = {
					tier < tier_empire
					tier >= tier_county
				}
				change_title_holder = {
					holder = scope:secondary_actor
					change = scope:change
				}
			}
			every_vassal_or_below = {
				limit = {
					highest_held_title_tier >= tier_county
				}
				change_liege = {
					liege = scope:secondary_actor
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		scope:actor = {
			recruit_courtier = scope:recipient 
		}
	}
	ai_will_do = {
		base = 0
	}
	auto_accept = yes
}

hm_exchange_two_bannermen_interaction = {
	#category = interaction_category_friendly
	category = interaction_category_vassal
	common_interaction = yes

	send_name = SEND_PROPOSAL


	desc = hm_exchange_two_bannermen_interaction_desc
	
	is_shown = {
		scope:actor = scope:recipient
		scope:actor =  {
			has_government = imperial_government
			is_independent_ruler = yes
			highest_held_title_tier >= tier_duchy
			has_realm_law = crown_authority_03
			culture = {
				has_innovation = innovation_centralization_of_authority
			}
		}
	}
	
	populate_actor_list = {
		scope:actor = {
			every_vassal = {
				limit = {
					highest_held_title_tier >= tier_county
					NOT = { has_trait = incapable }
					is_at_war = no 
				}
				add_to_list = characters
			}
		}
	}

	populate_recipient_list = {
		scope:recipient = {
			every_vassal = {
				limit = {
					highest_held_title_tier >= tier_county
					NOT = { has_trait = incapable }
					is_at_war = no
				}
				add_to_list = characters
			}
		}
	}
	is_valid_showing_failures_only = {
		trigger_if = {
			limit = {
				exists = scope:secondary_recipient
				exists = scope:secondary_actor
			}
			NOT = { scope:secondary_actor = scope:secondary_recipient }
			scope:secondary_actor.primary_title.tier = scope:secondary_recipient.primary_title.tier
		}
	}
	on_accept = {
		scope:secondary_recipient = {
			save_scope_as = recipient_vassal
			scope:secondary_actor = { save_scope_as = actor_vassal }
			scope:actor = { save_scope_as = our_liege }
		}
		scope:secondary_recipient = {
			every_held_title = {
				add_to_temporary_list = titles_recipient
			}
			every_vassal = {
				add_to_temporary_list = vassal_recipient
			}
		}
		scope:secondary_actor = {
			every_held_title = {
				add_to_temporary_list = titles_actor
			}
			every_vassal = {
				add_to_temporary_list = vassal_actor
			}
		}
		scope:secondary_recipient = {
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = change
				add_claim_on_loss = no
			}
			every_in_list = {
				list = titles_recipient
				change_title_holder = {
					holder = scope:secondary_actor
					change = scope:change
				}
			}
			every_in_list = {
				list = vassal_recipient
				change_liege = {
					liege = scope:secondary_actor
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		scope:secondary_actor = {
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = change
				add_claim_on_loss = no
			}
			every_in_list = {
				list = titles_actor
				change_title_holder = {
					holder = scope:secondary_recipient
					change = scope:change
				}
			}
			every_in_list = {
				list = vassal_actor
				change_liege = {
					liege = scope:secondary_recipient
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}	
	}
	cost = {
		prestige = {
			value = {
				if = {
					limit = {
						scope:secondary_actor.sub_realm_size > scope:secondary_recipient.sub_realm_size 
					}
					add = scope:secondary_actor.sub_realm_size
					subtract = scope:secondary_recipient.sub_realm_size
					multiply = 40
					floor = yes
				}
				if = {
					limit = {
						scope:secondary_actor.sub_realm_size <= scope:secondary_recipient.sub_realm_size 
					}
					add = scope:secondary_recipient.sub_realm_size
					subtract = scope:secondary_actor.sub_realm_size
					multiply = 40
					floor = yes
				}
			}
		}
		gold = {
			value = {
				if = {
					limit = {
						scope:secondary_actor.sub_realm_size > scope:secondary_recipient.sub_realm_size 
					}
					add = scope:secondary_actor.sub_realm_size
					subtract = scope:secondary_recipient.sub_realm_size
					multiply = 50
					floor = yes
				}
				if = {
					limit = {
						scope:secondary_actor.sub_realm_size <= scope:secondary_recipient.sub_realm_size 
					}
					add = scope:secondary_recipient.sub_realm_size
					subtract = scope:secondary_actor.sub_realm_size
					multiply = 50
					floor = yes
				}
			}
		}
	}
	auto_accept = yes
	
	ai_accept = {
		base = 0
	}
	ai_frequency = 800
	ai_will_do = {
		base = 0
	}	
}