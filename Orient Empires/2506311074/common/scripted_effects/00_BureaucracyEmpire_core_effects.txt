#核心功能，寻找一个合理的对象接替该头衔
#主语是需要被替补的头衔，必填
BureaucracyEmpire_bureaucracy_success_effect = {
	if = {
		limit = { 
			#如果因为某些原因已经交接过了，不再继续交接
			#$TITLE$.holder = $TEMP_HOLDER$ 
			#从属于帝国官僚制。
			$TEMP_HOLDER$ = {
				OR = {
					has_government = bureau_government
					has_realm_law = official_succession_law
				}
			}
		}
		
		#选择合适的交接对象
		$TEMP_HOLDER$ = {
			save_temporary_scope_as = temp_holder
			if = {
				limit = {
					is_independent_ruler = yes 
				}
				save_scope_as = liege
			}
			else_if = {
				limit = { exists = top_liege }
				top_liege = { save_scope_as = liege } 
			}
			else = {
				liege = { save_scope_as = liege }
			}
			
		}
		ordered_living_character = {
			#限制
			limit = {
				#下级角色
				OR = {
					AND = {
						highest_held_title_tier < root.primary_title.tier
						is_ruler = yes
						OR = {
							has_realm_law = official_succession_law
							has_government = bureau_government
						}
						NOT = {
							has_global_variable = Bureaucracy_Manager_ruler
						}
					}
					AND = {
						NOT = { is_courtier_of = scope:liege }
						is_ruler = no
						NOT = {
							has_global_variable = Bureaucracy_Manager_noruler
						}
					}
					AND = {
						is_courtier_of = scope:liege 
						is_ruler = no
						is_councillor = no
					}
				}	
				#国内角色
				AND = {
					NOT = {
						has_global_variable = Bureaucracy_Manager_onlyone
					} 
					NOT = {
						any_heir_title = {
							tier >= tier_county
							count >= 1
						}
					}
				}
				target_is_liege_or_above = scope:liege
				trigger_if = {
					limit = { exists = top_liege }
					top_liege = { is_oe_imperial_government_trigger = yes }
				}
				trigger_else_if = {
					limit = { exists = liege }
					liege = { is_oe_imperial_government_trigger = yes }
				}
				trigger_else = { always = no }
				#从属于帝国官僚制。
				is_independent_ruler = no
				OR = {
					has_realm_law = official_succession_law
					has_government = bureau_government
				}
				#非内阁成员
				is_councillor = no
				is_adult = yes
				NOT = { is_child_of = scope:temp_holder }
				NOT = { house = top_liege.house }
				#性别正确
				trigger_if = {
					limit = { 
						$TEMP_HOLDER$.faith = { has_doctrine_parameter = women_cannot_be_granted_titles }
					}
					is_male = yes
				}
				trigger_if = {
					limit = { 
						$TEMP_HOLDER$.faith = { has_doctrine_parameter = men_cannot_be_granted_titles }
					}
					is_female = yes
				}
			}
			#顺序 
			order_by = {
				value = age
				#资历
				if = {
					limit = {
						has_trait = BureaucracyEmpire_bureaucrat_1
					}
					add = 100
				}
				else_if = {
					limit = {
						is_courtier_of = scope:liege
						NOT = { is_councillor_of = scope:liege }
						NOT = {
							has_global_variable = Bureaucracy_Manager_court
						}
					}
					add = 500
				}
				else_if = {
					limit = {
						OR = {
							is_councillor_of = scope:liege
							is_councillor_of = top_liege
						}
					}
					add = -3000   #禁止京官外迁
				}
				else_if = {
					limit = {
						has_trait = BureaucracyEmpire_bureaucrat_2
					}
					add = 200
				}
				else_if = {
					limit = {
						has_trait = BureaucracyEmpire_bureaucrat_3
					}
					add = 300
				}
				else_if = {
					limit = {
						has_trait = BureaucracyEmpire_bureaucrat_4
					}
					add = 400
				}
				else_if = {
					limit = {
						has_trait = BureaucracyEmpire_bureaucrat_5
					}
					add = 500
				}
			}
			save_scope_as = lucky
		}
		#如果找到合适的人选的话……
		if = {
			limit = { 
				exists = scope:lucky 
				#scope:lucky = { is_male = yes }
				
				trigger_if = {
					limit = { 
						$TITLE$.holder.faith = { has_doctrine_parameter = women_cannot_be_granted_titles }
					}
					scope:lucky = { is_male = yes }
				}
				trigger_if = {
					limit = { 
						$TITLE$.holder.faith = { has_doctrine_parameter = men_cannot_be_granted_titles }
					}
					scope:lucky = { is_female = yes }  #报错点
				}				
			}			
			
			$TEMP_HOLDER$ = {
#				trigger_event = bureaucracy.0001
				save_scope_as = bureaucrat
				set_designated_heir = scope:lucky
				if = {
					limit = {
						NOT = { has_character_flag = save_east_contract }
						exists = scope:previous_holder
						scope:previous_holder = {
							NOT = { has_character_flag = save_east_contract }
						}	
					}
					add_character_flag = { #标记角色已经存储过
						flag = save_east_contract
						months = 9
					}
					save_east_contract_effect = yes	
				}
			}
		}
	}
}
BureaucracyEmpire_bureaucracy_liege_effect= {
	if = {
		limit = { 
			#如果因为某些原因已经交接过了，不再继续交接
			#$TITLE$.holder = $TEMP_HOLDER$ 
			#从属于帝国官僚制。
			$TEMP_HOLDER$ = {
				OR = {
					has_government = bureau_government
					has_realm_law = official_succession_law
				}
			}
		}
		
		#选择合适的交接对象
		$TEMP_HOLDER$ = {
			save_temporary_scope_as = temp_holder
			if = {
				limit = {
					is_independent_ruler = yes 
				}
				save_scope_as = liege
			}
			else_if = {
				limit = { exists = top_liege }
				top_liege = { save_scope_as = liege } 
			}
			else = {
				liege = { save_scope_as = liege }
			}
			
		}
		ordered_living_character = {
			#限制
			limit = {
				#下级角色
				is_ruler = no	
				#国内角色
				target_is_liege_or_above = scope:liege
				trigger_if = {
					limit = { exists = top_liege }
					top_liege = { is_oe_imperial_government_trigger = yes }
				}
				trigger_else_if = {
					limit = { exists = liege }
					liege = { is_oe_imperial_government_trigger = yes }
				}
				trigger_else = { always = no }
				is_adult = yes
				#性别正确
				trigger_if = {
					limit = { 
						$TEMP_HOLDER$.faith = { has_doctrine_parameter = women_cannot_be_granted_titles }
					}
					is_male = yes
				}
				trigger_if = {
					limit = { 
						$TEMP_HOLDER$.faith = { has_doctrine_parameter = men_cannot_be_granted_titles }
					}
					is_female = yes
				}
			}
			#顺序 
			order_by = {
				value = age
				#资历
				if = {
					limit = {
						has_trait = BureaucracyEmpire_bureaucrat_1
					}
					add = 100
				}
				else_if = {
					limit = {
						has_trait = BureaucracyEmpire_bureaucrat_2
					}
					add = 200
				}
				else_if = {
					limit = {
						has_trait = BureaucracyEmpire_bureaucrat_3
					}
					add = 300
				}
				else_if = {
					limit = {
						has_trait = BureaucracyEmpire_bureaucrat_4
					}
					add = 400
				}
				else_if = {
					limit = {
						has_trait = BureaucracyEmpire_bureaucrat_5
					}
					add = 500
				}
			}
			save_scope_as = lucky
		}
		#如果找到合适的人选的话……
		if = {
			limit = { 
				exists = scope:lucky 
				
				trigger_if = {
					limit = { 
						$TITLE$.holder.faith = { has_doctrine_parameter = women_cannot_be_granted_titles }
					}
					scope:lucky = { is_male = yes }
				}
				trigger_if = {
					limit = { 
						$TITLE$.holder.faith = { has_doctrine_parameter = men_cannot_be_granted_titles }
					}
					scope:lucky = { is_female = yes }
				}
			}
			
			
			$TEMP_HOLDER$ = {
				save_scope_as = bureaucrat
				if = {
					limit = {
						NOT = { has_character_flag = save_east_contract }
						exists = scope:previous_holder
						scope:previous_holder = {
							NOT = { has_character_flag = save_east_contract }
						}	
					}
					add_character_flag = { #标记角色已经存储过
						flag = save_east_contract
						months = 9
					}
					save_east_contract_effect = yes	
				}
			}
		}
	}
}