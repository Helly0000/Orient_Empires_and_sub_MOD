############# SpecialRelevantFactorImpactOnRuler_specific_effects
# by 往来天地间 WangLaiTianDiJian
# SpecialRelevantFactorImpactOnRuler




###########不同类别具体修正，可修改

SpecialRelevantFactorImpactOnRuler_type_A_01_impact_effect = {#自定义，对于每一类关系可定制
	scope:trigger_ruler_throughout = { save_temporary_scope_as = affected_ruler_throughout }
	scope:affected_ruler_throughout = {
		SpecialRelevantFactorImpactOnRuler_affected_ruler_info_initialization_effect = yes
		remove_all_character_modifier_instances = SpecialRelevantFactorImpactOnRuler_type_A_01_A_character_modifier

		every_neighboring_top_liege_realm_owner = {
			SpecialRelevantFactorImpactOnRuler_relevant_factor_count_and_add_modifier_function_effect = {
				ISRELEVANTFACTORTYPETRIGGER = SpecialRelevantFactorImpactOnRuler_relevant_factor_is_type_A_01_trigger
				MODIFIERNAME = SpecialRelevantFactorImpactOnRuler_type_A_01_A_character_modifier
				MAXMODIFIERCOUNT = 10 #可修改，修正叠加最大数量
			}
		}

		send_interface_message = {
			type = event_generic_bad
			title = SpecialRelevantFactorImpactOnRuler_type_A_01_impact_effect_tip_A.tt
			desc = SpecialRelevantFactorImpactOnRuler_type_A_01_impact_effect_tip_A.tt
			#desc = SpecialRelevantFactorImpactOnRuler_type_A_01_impact_effect_tip_A_notification
			left_icon = scope:affected_ruler_throughout
		}	


		if = {
			limit = { 
				has_realm_law = crown_authority_3
				var:relevant_factor_count > 5
			}
			send_interface_message = {	
				title = SpecialRelevantFactorImpactOnRuler_type_A_01_impact_effect_tip_B.tt
				desc = SpecialRelevantFactorImpactOnRuler_type_A_01_impact_effect_tip_B_notification
				left_icon = scope:affected_ruler_throughout
#				show_as_tooltip = { add_realm_law = crown_authority_2 }
				add_realm_law = crown_authority_2
				add_character_flag = { flag = SpecialRelevantFactorImpactOnRuler_cannot_exceed_crown_authority_2 years = 1 }
			}
		}

		if = {
			limit = { 
				OR = {
#					has_realm_law = crown_authority_1#测试完后记得改回正确数字，下同
					has_realm_law = crown_authority_2
					has_realm_law = crown_authority_3
				}
				var:relevant_factor_count > 10
			}
			send_interface_message = {
				type = event_generic_bad
				title = SpecialRelevantFactorImpactOnRuler_type_A_01_impact_effect_tip_C.tt
				desc = SpecialRelevantFactorImpactOnRuler_type_A_01_impact_effect_tip_C_notification
				left_icon = scope:affected_ruler_throughout
				#show_as_tooltip = { add_realm_law = crown_authority_1 }
				add_realm_law = crown_authority_1
				add_character_flag = { flag = SpecialRelevantFactorImpactOnRuler_cannot_exceed_crown_authority_1 years = 1 }
			}
#			send_interface_message = {
#				type = event_generic_bad
#				title = SpecialRelevantFactorImpactOnRuler_type_A_01_impact_effect_tip_C.tt
#				desc = SpecialRelevantFactorImpactOnRuler_type_A_01_impact_effect_tip_C_notification
#				left_icon = scope:affected_ruler_throughout
#			}
		}
	}
}

SpecialRelevantFactorImpactOnRuler_type_A_02_impact_effect = {#自定义，对于每一类关系可定制
	scope:trigger_ruler_throughout = { save_temporary_scope_as = affected_ruler_throughout }
	scope:affected_ruler_throughout = {
		SpecialRelevantFactorImpactOnRuler_affected_ruler_info_initialization_effect = yes
		remove_all_character_modifier_instances = SpecialRelevantFactorImpactOnRuler_type_A_02_A_character_modifier
		
		every_neighboring_top_liege_realm_owner = {
			SpecialRelevantFactorImpactOnRuler_relevant_factor_count_and_add_modifier_function_effect = {
				ISRELEVANTFACTORTYPETRIGGER = SpecialRelevantFactorImpactOnRuler_relevant_factor_is_type_A_02_trigger
				MODIFIERNAME = SpecialRelevantFactorImpactOnRuler_type_A_02_A_character_modifier
				MAXMODIFIERCOUNT = 1 #可修改，修正叠加最大数量
			}
		}
	}
}

SpecialRelevantFactorImpactOnRuler_type_A_03_impact_effect = {#自定义，对于每一类关系可定制
	scope:trigger_ruler_throughout = { save_temporary_scope_as = affected_ruler_throughout }
	scope:affected_ruler_throughout = {
		SpecialRelevantFactorImpactOnRuler_affected_ruler_info_initialization_effect = yes
		remove_all_character_modifier_instances = SpecialRelevantFactorImpactOnRuler_type_A_03_A_character_modifier
		remove_all_character_modifier_instances = SpecialRelevantFactorImpactOnRuler_type_A_03_B_character_modifier
		every_ally = {
			limit = { SpecialRelevantFactorImpactOnRuler_relevant_factor_is_type_A_03_trigger = { RULER = trigger_ruler_throughout } }
			add_to_list = relevant_factor_list

		}
		every_relation = {
			type = WLTDJ_suzerain
			limit = { SpecialRelevantFactorImpactOnRuler_relevant_factor_is_type_A_03_trigger = { RULER = trigger_ruler_throughout } }
			add_to_list = relevant_factor_list

		}
		every_in_list = {
			list = relevant_factor_list
			if = {
				limit = { scope:affected_ruler_throughout = { is_ai = no } }
				SpecialRelevantFactorImpactOnRuler_relevant_factor_count_and_add_modifier_function_effect = {
					ISRELEVANTFACTORTYPETRIGGER = SpecialRelevantFactorImpactOnRuler_relevant_factor_is_type_A_03_trigger
					MODIFIERNAME = SpecialRelevantFactorImpactOnRuler_type_A_03_A_character_modifier
					MAXMODIFIERCOUNT = 10 #可修改，修正叠加最大数量
				}
			}
			else = {
				SpecialRelevantFactorImpactOnRuler_relevant_factor_count_and_add_modifier_function_effect = {
					ISRELEVANTFACTORTYPETRIGGER = SpecialRelevantFactorImpactOnRuler_relevant_factor_is_type_A_03_trigger
					MODIFIERNAME = SpecialRelevantFactorImpactOnRuler_type_A_03_B_character_modifier
					MAXMODIFIERCOUNT = 10 #可修改，修正叠加最大数量
				}
			}
		
		}
	}
}


SpecialRelevantFactorImpactOnRuler_type_A_04_impact_effect = {#自定义，对于每一类关系可定制
	clear_saved_scope = affected_ruler_throughout
	scope:trigger_ruler_throughout = { save_temporary_scope_as = affected_ruler_throughout }
	scope:affected_ruler_throughout = {
		SpecialRelevantFactorImpactOnRuler_affected_ruler_info_initialization_effect = yes
		remove_all_character_modifier_instances = SpecialRelevantFactorImpactOnRuler_type_A_04_A_character_modifier
		every_war_ally = {
			SpecialRelevantFactorImpactOnRuler_relevant_factor_count_and_add_modifier_function_effect = {
				ISRELEVANTFACTORTYPETRIGGER = SpecialRelevantFactorImpactOnRuler_relevant_factor_is_type_A_04_trigger
				MODIFIERNAME = SpecialRelevantFactorImpactOnRuler_type_A_04_A_character_modifier
				MAXMODIFIERCOUNT = 10 #可修改，修正叠加最大数量
			}
		}
	}
}

SpecialRelevantFactorImpactOnRuler_type_A_05_impact_effect = {#自定义，对于每一类关系可定制
	scope:trigger_ruler_throughout = { save_scope_as = affected_ruler_throughout }
	SpecialRelevantFactorImpactOnRuler_affected_ruler_info_initialization_effect = yes
	remove_all_character_modifier_instances = SpecialRelevantFactorImpactOnRuler_type_A_05_A_character_modifier


	every_ally = {
		limit = { SpecialRelevantFactorImpactOnRuler_relevant_factor_is_type_A_05_trigger = { RULER = trigger_ruler_throughout } }
		add_to_list = relevant_factor_list

	}
	every_relation = {
		type = WLTDJ_tributary
		limit = { SpecialRelevantFactorImpactOnRuler_relevant_factor_is_type_A_05_trigger = { RULER = trigger_ruler_throughout } }
		add_to_list = relevant_factor_list

	}
	every_in_list = {
		list = relevant_factor_list
		limit = { NOT = { this = scope:affected_ruler_throughout } }
		save_scope_as = relevant_factor_throughout
		scope:affected_ruler_throughout = {
			if = {
				limit = { is_ai = yes }
				add_character_modifier = { modifier = SpecialRelevantFactorImpactOnRuler_type_A_05_A_character_modifier years = 1 }
			}
			else = {
				trigger_event = { id = SpecialRelevantFactorImpactOnRuler.0001 }
			}
		}		

	}

	clear_saved_scope = affected_ruler_throughout
	clear_saved_scope = relevant_factor_throughout
}





SpecialRelevantFactorImpactOnRuler_type_A_07_impact_effect = {#自定义，对于每一类关系可定制
	scope:trigger_ruler_throughout = { save_temporary_scope_as = affected_ruler_throughout }
	SpecialRelevantFactorImpactOnRuler_affected_ruler_info_initialization_effect = yes

	scope:affected_ruler_throughout = {
		every_relation = {
			type = WLTDJ_suzerain
			limit = { SpecialRelevantFactorImpactOnRuler_relevant_factor_is_type_A_07_trigger = { RULER = trigger_ruler_throughout } }
			add_to_list = relevant_factor_list
			if = {
				limit = { is_ai = no }
				save_temporary_scope_as = temp_player
			}
		}
		every_in_list = {
			list = relevant_factor_list
			SpecialRelevantFactorImpactOnRuler_relevant_factor_count_and_add_modifier_function_effect = {
				ISRELEVANTFACTORTYPETRIGGER = SpecialRelevantFactorImpactOnRuler_relevant_factor_is_type_A_07_trigger
				MODIFIERNAME = SpecialRelevantFactorImpactOnRuler_type_A_07_A_character_modifier
				MAXMODIFIERCOUNT = 0
			}
		}
		remove_all_character_modifier_instances = SpecialRelevantFactorImpactOnRuler_type_A_07_A_character_modifier

		every_in_list = {
			list = relevant_factor_list
			limit = { NOT = { this = scope:affected_ruler_throughout } }
			culture = { save_temporary_scope_as = temp_culture }
			scope:affected_ruler_throughout.culture = {
				if = {
					limit = { NOT = { exists = var:WLTDJ_guiding_culture } }
					set_variable = { name = WLTDJ_guiding_culture value = scope:temp_culture }

				}

				else = {
					var:WLTDJ_guiding_culture = { save_temporary_scope_as = current_guiding_culture }
					save_temporary_scope_value_as = {
						name = temp_ratio
						value = { value = scope:temp_culture.culture_head.max_military_strength divide = scope:current_guiding_culture.culture_head.max_military_strength }
					}
					if = {
						limit = { scope:temp_ratio > 1 }
						set_variable = { name = WLTDJ_guiding_culture value = scope:temp_culture }
					}
				}
			}
		}

		scope:affected_ruler_throughout.culture = {
			if = {
				limit = { NOT = { exists = var:WLTDJ_learning_culture_progress } }
				set_variable = { name = WLTDJ_learning_culture_progress value = 0 }
			}
			if = {
				limit = { scope:affected_ruler_throughout = { is_ai = yes } }
				change_variable = { name = WLTDJ_learning_culture_progress add = { value = scope:affected_ruler_throughout.var:relevant_factor_count multiply = 0.1 add = 1} }
			}
			else = {
				change_variable = { name = WLTDJ_learning_culture_progress add = { value = scope:affected_ruler_throughout.var:relevant_factor_count multiply = 0.05 add = 0.5 } }
			}
			if = {
				limit = {
					var:WLTDJ_learning_culture_progress >= 100
					can_get_innovation_from = var:WLTDJ_guiding_culture
				}
				get_random_innovation_from = var:WLTDJ_guiding_culture

				if = {
					limit = {
						scope:affected_ruler_throughout = {
							any_relation = {
								type = WLTDJ_suzerain
								is_ai = no
							}
						}
					}
					scope:temp_player = {
						send_interface_message = {	
							title = SpecialRelevantFactorImpactOnRuler_type_A_07_impact_effect_tip_A.tt
#							desc = SpecialRelevantFactorImpactOnRuler_type_A_07_impact_effect_tip_A_notification
							left_icon = scope:affected_ruler_throughout
						}
					}
				}

				change_variable = { name = WLTDJ_learning_culture_progress subtract = 100 }
			}
		}
	}



	clear_saved_scope = affected_ruler_throughout
	clear_saved_scope = relevant_factor_throughout
	clear_saved_scope = temp_culture
	clear_saved_scope = current_guiding_culture
#	clear_variable_list = relevant_factor_variable_list

}