types CourtPositionItems
{
	### Brief: widget_hired_court_position_item
	# Hired court position item that is part of a list of several court
	# positions. It will cache the court position tasks that are valid for the
	# employer.
	#
	# Expects the following datacontexts:
	#	EmployedPositionItem - The EmployedPositionItem that caches information
	#		regarding this Court Position.
	#
	type widget_hired_court_position_item = widget_court_position_entry_base
	{
		blockoverride "cp_root"
		{
			datacontext = "[CourtPositionListItem.GetObject]"
			datacontext = "[CourtPositionItem.GetPosition]"
			datacontext = "[CourtPosition.GetPositionType]"
			datacontext = "[CourtPosition.GetEmployee]"

			size = { 537 270 }

			background = {
				using = Background_Area_Light
				margin_top = 2
				alpha = 0.6
			}

			background = {
				using = Background_Frame
				margin_top = 2
				margin_bottom = 2
				margin_right = -3
			}
		}

		blockoverride "cp_heading_top_right_insert"
		{
			button_round = {
				onclick = "[CourtPosition.OpenReplaceWindow]"
				onclick = "[CourtPositionsWindow.ClearSelectedPositionId]"
				tooltip = "COURT_POSITION_REPLACE"
				using = tooltip_ne

				size = { 30 30 }

				button_change = {
					parentanchor = center
					alwaystransparent = yes
					size = { 22 22 }
				}
			}

			button_round = {
				onclick = "[CourtPosition.OpenRevokeConfirmation]"
				tooltip = "COURT_POSITION_REVOKE"
				using = tooltip_ne

				size = { 30 30 }

				button_cancel = {
					parentanchor = center
					alwaystransparent = yes
					size = { 24 24 }
				}
			}
		}

		blockoverride "cp_salary"
		{
			text = "[CourtPosition.GetSalaryText]"
			tooltip = "[CourtPosition.GetSalaryBreakdownTooltip]"
		}

		blockoverride "cp_portrait"
		{
			margin_bottom = 4

			portrait_head_small = {}
		}

		blockoverride "cp_ai_score"
		{
			text = "[CourtPosition.GetAICandidateScore]"
		}

		blockoverride "cp_effects"
		{
			text = "[CourtPosition.GetEmployerBonuses]"
			minimumsize = { 435 0 }
			maximumsize = { 435 150 }
			autoresize = yes
		}

		blockoverride "cp_court_effects"
		{
			text_multi = {
				visible = "[CourtPosition.GetPositionType.HasLiegeCourtModifiers]"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				margin = { 8 4 }
				minimumsize = { 435 0 }
				maximumsize = { 435 100 }
				autoresize = yes

				align = top|left|nobaseline

				text = "COURT_POSITION_EMPLOYER_COURT_EFFECTS"
			}
		}

		blockoverride "cp_extra_effects"
		{
			vbox = {
				layoutpolicy_horizontal = expanding
				margin = { 14 6 }

				background = {
					using = Background_Area

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
						blend_mode = alphamultiply
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					spacing = 2

					text_single = {
						using = Font_Size_Medium
						text = "[CourtPosition.GetEmployee.Custom('OE_CourtPositionType')] [CourtPosition.GetEmployee.Custom('OE_GetUINameNotMeNoTooltip')]"
						default_format = "#high"
						max_width = 220
					}

					expand = {}

					text_single = {
						name = "opinion_bonus"
						text = "COURT_POSITION_OPINION_BONUS"
						max_width = 160
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					
					court_position_aptitude_text = {
						name = "aptitude"
					}

					expand = {}

					text_single = {
						default_format = "#weak"
						text = "[CourtPosition.GetTimeOfService]"
						max_width = 160
					}
				}
			}
		}

		blockoverride "cp_tasks"
		{
			vbox = {
				layoutpolicy_horizontal = expanding
				visible = "[And( Not( IsDataModelEmpty( CourtPositionType.GetAllPositionTasks ) ), CourtPositionType.HasVisibleTasks( GetPlayer.Self ) )]"
				minimumsize = { 0 100 }

				background = {
					using = Background_Area
					margin = { -4 -2 }
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin = { 20 6 }


					hbox = {
						layoutpolicy_vertical = expanding
						layoutpolicy_horizontal = expanding

						hbox = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding

							vbox = {

								margin = { 0 3 }

								minimumsize = { 72 0  }

								text_single = {
									text = "COURT_POSITION_TASK"
									align = nobaseline
									default_format = "#high"
									layoutpolicy_horizontal = expanding
								}
								text_single = {
									visible = "[CourtPosition.HasActiveTask]"
									layoutpolicy_horizontal = expanding

									text = "[CourtPosition.GetActiveTask.GetCostText( CourtPosition.GetEmployer.Self )]"
									tooltip = "[CourtPosition.GetActiveTask.GetCostBreakdown( CourtPosition.GetEmployer.Self )]"
									align = nobaseline
									max_width = 140
								}

								text_single = {
									visible = "[Not( CourtPosition.HasActiveTask )]"
									layoutpolicy_horizontal = expanding

									text = "COURT_POSITION_NO_ACTIVE_TASK_COST"
									align = nobaseline
									max_width = 140
								}
							}
							
							expand = {}
							
							vbox = {

								max_width = 20

								text_single = {
									visible = "[CourtPosition.GetActiveTask.IsValid]"
									layoutpolicy_vertical = expanding
									layoutpolicy_horizontal = expanding

									margin = { 8 4 }

									default_format = "#high"
									text = "[CourtPosition.GetActiveTask.GetName]"
									align = left|nobaseline
								}

								vbox = {
									layoutpolicy_horizontal = expanding
									datacontext = "[CourtPosition.GetActiveTask]"

									maximumsize = { 440 -1 }

									text_multi = {
										visible = "[CourtPosition.GetActiveTask.HasEmployerModifiers]"
										layoutpolicy_horizontal = expanding
										margin = { 8 0 }
										maximumsize = { 200 100 }
										autoresize = yes

										align = top|left|nobaseline
										text = "[CourtPosition.GetActiveTask.GetEmployerModifierDescription( CourtPosition.Self )]"
									}

									text_multi = {
										visible = "[CourtPosition.GetActiveTask.HasEmployerCourtModifiers]"
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding
										margin = { 8 0 }
										maximumsize = { 200 150 }
										autoresize = yes

										align = top|left|nobaseline
										text = "COURT_POSITION_TASK_EMPLOYER_COURT_EFFECTS"
									}

								}

								text_single = {
									visible = "[Not( CourtPosition.HasActiveTask )]"
									layoutpolicy_vertical = expanding
									layoutpolicy_horizontal = expanding

									margin = { 8 4 }
									text = "COURT_POSITION_NO_ACTIVE_TASK"
									align = nobaseline
									max_width = 140
								}

							}
							
							expand = {}
						}
						
						expand = {}
						
						vbox = {
							expand = {}

							court_position_task_buttons_hbox = {
								datamodel = "[CourtPositionItem.GetTasks]"
								datacontext = "[CourtPositionItem.GetPosition]"
								datacontext = "[CourtPositionItem.GetPositionType]"
							}

							expand = {layoutpolicy_vertical = expanding}

						}
					}
					
					expand = {}
				}

				hbox = {
					visible = "[CourtPosition.GetActiveTask.IsValid]"

					layoutpolicy_horizontal = expanding
					margin_right = 9
					margin_bottom = 4

					expand = {}
				}
			}
		}
	}
}
