# 官僚交接弹窗
namespace = bureaucracy
bureaucracy.0001 = {

	type = character_event

	title = bureaucracy.0001.t
	desc = bureaucracy.0001.desc

	theme = war

	trigger = {

	}
	immediate = {
		scope:temp_holder = { save_scope_as = bureaucrat	save_east_contract_effect = yes	 }
		scope:player = { save_scope_as = lucky }
	}
	override_background = {
		event_background = throne_room
	}

	left_portrait = {
		character = scope:player
		animation = worry
	}

	right_portrait = {
		character = scope:player.top_liege
		animation = personality_content
	}

	# Join 答应升官
	option = {
		name = bureaucracy.0001.a
		
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
		}
		every_in_list = {
			list = list_temp_title
			change_title_holder = {
				holder = scope:player
				change = scope:change
			}
			scope:temp_holder = {
				remove_claim = prev
			}
		}	
		every_in_list = {
			list = list_old_title
			change_title_holder = {
				holder = scope:temp_holder
				change = scope:change
			}
			scope:player = {
				remove_claim = prev
			}
		}
		every_in_list = {
			list = list_old_vassal
			change_liege = {
				liege = scope:temp_holder
				change = scope:change
			}
		}
		every_in_list = {
			list = list_temp_vassal
			change_liege = {
				liege = scope:player
				change = scope:change
			}
		}
		scope:player = { #升官
			change_liege = {
				liege = scope:liege
				change = scope:change
			}
			if = {
				limit = {
					NOT = { has_character_flag = flag_bureacrat_positioned }
				}
				add_character_flag = {
					flag = flag_bureacrat_positioned
					years = 6
				}
			}
		}
		scope:temp_holder = { #贬官
			change_liege = {
				liege = scope:old_liege
				change = scope:change
			}
		}
		scope:player = {
			inter_east_contract_effect = yes
		}
		resolve_title_and_vassal_change = scope:change

		scope:player = {
			add_opinion = {
				target = scope:player.top_liege
				modifier = revoked_title
			}
			add_joined_faction_discontent = 25
		}
		ai_chance = {
			base = 100
		}
	}

	# Don't join 赖着不走
	option = {
		name = bureaucracy.0001.b
		scope:player.top_liege = {
			add_opinion = {
				modifier = hate_opinion
				target = scope:player
				opinion = -50
			}
			add_pressed_claim = scope:player.primary_title
		}
		#war_for_revoke_effect = yes
		scope:player = {
			add_opinion = {
				modifier = revoked_title
				target = scope:player.top_liege
			}
			add_prestige_level = -2
			add_dynasty_prestige_level = -1
			if = {
				limit = {
					NOT = { has_character_flag = flag_bureacrat_positioned }
				}
				add_character_flag = {
					flag = flag_bureacrat_positioned
					years = 6
				}
			}
		}
		ai_chance = {
			base = -1000
		}		
	}
}
bureaucracy.0007 = {

	type = character_event

	title = bureaucracy.0007.t
	desc = bureaucracy.0007.desc

	theme = war

	trigger = {

	}
	immediate = {
		scope:temp_holder = { save_scope_as = bureaucrat 	save_east_contract_effect = yes	 }
		scope:player = { save_scope_as = lucky }
	}
	override_background = {
		event_background = throne_room
	}

	left_portrait = {
		character = scope:player
		animation = worry
	}

	right_portrait = {
		character = scope:player.top_liege
		animation = personality_content
	}

	# 答应贬官
	option = {
		name = bureaucracy.0007.a
		
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
		}
		every_in_list = {
			list = list_temp_title
			change_title_holder = {
				holder = scope:player
				change = scope:change
			}
			scope:temp_holder = {
				remove_claim = prev
			}
		}
		every_in_list = {
			list = list_old_title
			change_title_holder = {
				holder = scope:old_liege
				change = scope:change
			}
			scope:player = {
				remove_claim = prev
			}
		}
		every_in_list = {
			list = list_temp_vassal
			change_liege = {
				liege = scope:player
				change = scope:change
			}
		}
		every_in_list = {
			list = list_old_vassal
			change_liege = {
				liege = scope:old_liege
				change = scope:change
			}
		}
		scope:player = { #贬官
			change_liege = {
				liege = scope:liege
				change = scope:change
			}
			if = {
				limit = {
					NOT = { has_character_flag = flag_bureacrat_positioned }
				}
				add_character_flag = {
					flag = flag_bureacrat_positioned
					years = 6
				}
			}
			add_stress = 100
		}
		scope:player = {
			inter_east_contract_effect = yes
		}
		resolve_title_and_vassal_change = scope:change

		scope:player = {
			add_opinion = {
				target = scope:player.top_liege
				modifier = revoked_title
			}
			add_joined_faction_discontent = 25
		}
		ai_chance = {
			base = 100
		}
	}

	# Don't join 造反
	option = {
		name = bureaucracy.0007.b
		scope:player.top_liege = {
			add_opinion = {
				modifier = hate_opinion
				target = scope:player
				opinion = -50
			}
			add_pressed_claim = scope:player.primary_title
			title_revocation_stress_effect = yes
		}
		scope:player.top_liege = { save_scope_as = actor }
		scope:player = { save_scope_as = recipient }
		war_for_revoke_effect = yes
		scope:player = {
			add_opinion = {
				modifier = revoked_title
				target = scope:player.top_liege
			}
			if = {
				limit = {
					NOT = { has_character_flag = flag_bureacrat_positioned }
				}
				add_character_flag = {
					flag = flag_bureacrat_positioned
					years = 6
				}
			}
		}
		if = {
			limit = {
				scope:player.top_liege = { has_realm_law_flag = vassal_refusal_is_treason }
			}
			scope:player.top_liege = {
				add_opinion = {
					target = scope:player
					modifier = treasonous_revoke_refusal
				}
			}
		}
		if = {
			limit = {
				scope:player.top_liege = { has_character_flag = flag_hostile_actions_disabled_delay }
			}
			scope:player.top_liege = { remove_character_flag = flag_hostile_actions_disabled_delay }
		}
		ai_chance = {
			base = -1000
		}
	}
}

bureaucracy.0002 = {
	type = character_event
	hidden = yes
	trigger = {
		#is_independent_ruler = no
		is_ai = yes
		exists = player_heir
		OR = {
			any_held_title = {
				
				NOT = { target_is_de_jure_liege_or_above = root.primary_title }
				is_landless_type_title = no
					#tier = tier_county
				NOT = { this = root.primary_title }
			}
			any_vassal = {
				any_held_title = {
					NOT = { target_is_de_jure_liege_or_above = root.primary_title }
					#tier = tier_county
					is_landless_type_title = no
					#NOT = { this = root.primary_title }
				}	
			}
		}
	}
	immediate = {
		save_scope_as = recipient
		root.liege = { #改动
			save_scope_as = actor
		}
		player_heir = { save_scope_as = lucky }
		##kings
		if = { 
			limit = { 
				primary_title = {
					is_titular = no
				}
				any_held_title = {
					NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
					tier = tier_county
					is_landless_type_title = no
					NOT = { this = scope:recipient.primary_title }			
				}
			}
			while = {
				limit = { 
					primary_title = {
						is_titular = no  #荣誉头衔交接封臣 改动
					}
					any_held_title = {
						NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
						tier = tier_county
						is_landless_type_title = no
						NOT = { this = scope:recipient.primary_title }
					}
				}
				BureaucracyEmpire_bureaucracy_liege_effect = {
					TITLE = scope:recipient.primary_title#TITLE是被继任的头衔
					TEMP_HOLDER = scope:recipient #TEMP_HOLDER是目前临时持有头衔的人，一般是死去的官员的孩子。用于正常交接
				}
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = no
				}
				random_held_title = {
					limit = {
						tier = tier_county
						is_landless_type_title = no
						NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
						NOT = { this = scope:recipient.primary_title }
					}
					save_scope_as = change_held_title
					change_title_holder = {
						holder = scope:lucky  #报错点
						change = scope:change
					}
				}
				scope:lucky = { #报错点
					change_liege = {
						liege = scope:actor
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
				remove_claim = scope:change_held_title #剥夺宣称
				scope:lucky = { #报错点
					if = {
						limit = {
							exists = scope:lucky.primary_title
							scope:lucky.primary_title.de_jure_liege = {  #报错点
								exists = holder
							}
							scope:lucky.primary_title.de_jure_liege.holder.top_liege = scope:lucky.top_liege
						}
						trigger_event = {
							id = bureaucracy.0003
						}
					}
				}
			}	
		}
		
		if = {
			limit = { 
				any_vassal = {
					any_held_title = {
						NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
						tier = tier_county
						is_landless_type_title = no
					}
					
				}
			}
			while = {
				limit = {
					any_vassal = {
						any_held_title = {
							target_is_de_jure_liege_or_above = scope:recipient.primary_title
							tier = tier_county
							is_landless_type_title = no
						}
						any_held_title = {
							NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
							tier = tier_county
							is_landless_type_title = no
						}
					}	
				}
				BureaucracyEmpire_bureaucracy_liege_effect = {
					TITLE = scope:recipient.primary_title#TITLE是被继任的头衔
					TEMP_HOLDER = scope:recipient #TEMP_HOLDER是目前临时持有头衔的人，一般是死去的官员的孩子。用于正常交接
				}
				random_vassal = {
					limit = {
						any_held_title = {
							NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
							tier = tier_county
							is_landless_type_title = no
						}
						any_held_title = {
							target_is_de_jure_liege_or_above = scope:recipient.primary_title
							tier = tier_county
							is_landless_type_title = no
						}
					}
					create_title_and_vassal_change = {
						type = granted
						save_scope_as = change
						add_claim_on_loss = no
					}
					random_held_title = {
						limit = {
							NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
							tier = tier_county
							is_landless_type_title = no
						}
						change_title_holder = {
							holder = scope:lucky
							change = scope:change
						}
					}
					scope:lucky = { 
						change_liege = {
							liege = scope:actor
							change = scope:change
						}
					}
					resolve_title_and_vassal_change = scope:change
					scope:lucky = {
						if = {
							limit = {
								scope:lucky.primary_title.de_jure_liege = {
									exists = holder
								}
								scope:lucky.primary_title.de_jure_liege.holder.top_liege = scope:lucky.top_liege
							}
							trigger_event = {
								id = bureaucracy.0003
							}
						}
					}
				}	
			}
		}
		if = {
			limit = { 
				highest_held_title_tier = tier_kingdom
				any_held_title = {
					tier = tier_kingdom
					is_landless_type_title = no
					NOT = { this = scope:recipient.primary_title }
				}
			}
			while = {
				limit = {
					any_held_title = {
						NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
						tier = tier_kingdom
						is_landless_type_title = no
						NOT = { this = scope:recipient.primary_title }
					}
				}
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = no
				}
				random_held_title = {
					limit = {
						NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
						tier = tier_kingdom
						is_landless_type_title = no
						NOT = { this = scope:recipient.primary_title }
					}
					save_scope_as = change_held_title
				}
				random_vassal = {
					limit = {
						primary_title = { 
							target_is_de_jure_liege_or_above = scope:change_held_title
						}	
					}
					save_scope_as = lucky
				}
				scope:change_held_title = {
					change_title_holder = {
						holder = scope:lucky
						change = scope:change
					}
				}
				scope:lucky = { 
					change_liege = {
						liege = scope:actor
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
				scope:lucky = {
					if = {
						limit = {
							scope:lucky.primary_title.de_jure_liege  = {
								exists = holder
							}
							scope:lucky.primary_title.de_jure_liege.holder.top_liege = scope:lucky.top_liege
						}
						trigger_event = {
							id = bureaucracy.0003
						}
					}
				}
			}
		}
		if = {
			limit = { 
				#highest_held_title_tier = tier_kingdom
				any_held_title = {
					NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
					tier = tier_duchy
					is_landless_type_title = no
					NOT = { this = scope:recipient.primary_title }
				}
			}
			while = {
				limit = {
					any_held_title = {
						NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
						tier = tier_duchy
						is_landless_type_title = no
						NOT = { this = scope:recipient.primary_title }
					}
				}
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = no
				}
				random_held_title = {
					limit = {
						NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
						tier = tier_duchy
						is_landless_type_title = no
						NOT = { this = scope:recipient.primary_title }
					}
					save_scope_as = change_held_title
				}
				random_vassal = {
					limit = {
						primary_title = { 
							target_is_de_jure_liege_or_above = scope:change_held_title
						}	
					}
					save_scope_as = lucky
				}
				scope:change_held_title = {
					change_title_holder = {
						holder = scope:lucky
						change = scope:change
					}
				}
				scope:lucky = { 
					change_liege = {
						liege = scope:actor
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
				scope:lucky = {
					if = {
						limit = {
							exists = scope:lucky.primary_title
							scope:lucky.primary_title.de_jure_liege = { #报错点
								exists = holder
							}
							scope:lucky.primary_title.de_jure_liege.holder.top_liege = scope:lucky.top_liege
						}
						trigger_event = {
							id = bureaucracy.0003
						}
					}
				}
			}
		}
		
		if = {
			limit = { 
				any_vassal = {
					any_held_title = {
						NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
						tier = tier_county
						is_landless_type_title = no
					}
				}
			}
			while = {
				limit = {
					any_vassal = {
						any_held_title = {
							NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
							tier = tier_county
							is_landless_type_title = no
						}
					}	
				}
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = no
				}
				random_vassal = {
					limit = {
						any_held_title = {
							NOT = { target_is_de_jure_liege_or_above = scope:recipient.primary_title }
							tier = tier_county
							is_landless_type_title = no
						}
					}
					save_scope_as = lucky
				}
				scope:lucky = { 
					change_liege = {
						liege = scope:actor
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
				scope:lucky = {
					if = {
						limit = {
							scope:lucky.primary_title.de_jure_liege = {
								exists = holder
							}
							scope:lucky.primary_title.de_jure_liege.holder.top_liege = scope:lucky.top_liege
						}
						trigger_event = {
							id = bureaucracy.0003
						}
					}
				}
			}
		}	
	}
}
bureaucracy.0003 = {
	type = character_event
	hidden = yes
	immediate = {
		change_government_bureau_government_effect = yes
						if = { #文官流官制
								limit = {
									top_liege = { is_oe_imperial_official_trigger = yes }					
									is_bureau_government_trigger = yes
									highest_held_title_tier <= tier_duchy
									culture = { has_cultural_pillar = heritage_chinese }
									is_independent_ruler = no
									is_ai = yes
									#NOT = { vassal_contract_has_flag = imperial_bureau_3 }
								}
								if = { 
									limit = { NOT = { has_realm_law = official_succession_law } }
									add_realm_law_skip_effects = official_succession_law
								}
								if = { 
									limit = { NOT = { has_realm_law = male_only_law } }
									add_realm_law_skip_effects = male_only_law
								}
						}
		
		if = {
			limit = {
				primary_title.de_jure_liege = {
					exists = holder
				}
				primary_title.de_jure_liege.holder.top_liege = scope:lucky.top_liege
			}
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = change
				add_claim_on_loss = no
			}
			change_liege = {
				liege = primary_title.de_jure_liege.holder
				change = scope:change
			}
			resolve_title_and_vassal_change = scope:change
		}	
		
	}
}